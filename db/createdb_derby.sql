
DROP TABLE BuriStateUser;

CREATE TABLE BuriStateUser (
       StateUserID          INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
       StateID              INTEGER  ,
       BuriUserID           INTEGER  ,
       PRIMARY KEY (StateUserID)
);

CREATE INDEX XIF1BuriStateUser ON BuriStateUser
(
       StateID                        ASC
);

CREATE INDEX XIF2BuriStateUser ON BuriStateUser
(
       BuriUserID                     ASC
);


DROP TABLE BuriState;

CREATE TABLE BuriState (
       StateID              INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
       PathID               INTEGER  ,
       DataID               INTEGER  ,
       BranchID             INTEGER  ,
       UserIDVal            VARCHAR(20),
       UserIDNum            INTEGER,
       Btid                 INTEGER NOT NULL,
       insertDate           TIMESTAMP NOT NULL,
       autoRunTime          TIMESTAMP,
       processDate          TIMESTAMP,
       abortDate            TIMESTAMP NOT NULL,
       versionNo            INTEGER NOT NULL,
       PRIMARY KEY (StateID)
);

CREATE INDEX XIF1BuriState ON BuriState
(
       PathID                         ASC
);

CREATE INDEX XIF2BuriState ON BuriState
(
       DataID                         ASC
);

CREATE INDEX XIF4BuriState ON BuriState
(
       BranchID                       ASC
);

CREATE INDEX XIF5BuriState ON BuriState
(
       processDate                       ASC
);
CREATE INDEX XIF6BuriState ON BuriState
(
       autoRunTime                       ASC
);

DROP TABLE BuriStateUndoLog;

CREATE TABLE BuriStateUndoLog (
       StateUndoLogID              INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
	   StateID				INTEGER NOT NULL,
       BranchID             INTEGER  ,
       PathID               INTEGER  ,
       DataID               INTEGER  ,
       UserIDVal            VARCHAR(20),
       autoRunTime          TIMESTAMP,
       UserIDNum            INTEGER,
       insertDate           TIMESTAMP NOT NULL,
       Btid                 INTEGER NOT NULL,
       processDate          TIMESTAMP,
       abortDate            TIMESTAMP NOT NULL,
       versionNo            INTEGER NOT NULL,
       PRIMARY KEY (StateUndoLogID)
);

CREATE INDEX XIF1BuriStateUndoLog ON BuriStateUndoLog
(
       StateID                         ASC
);


DROP TABLE BuriTransaction;

CREATE TABLE BuriTransaction (
       Btid              INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
       insertDate           TIMESTAMP NOT NULL,
       versionNo            INTEGER NOT NULL,
       PRIMARY KEY (Btid)
	
);

CREATE INDEX XIF1BuriTransaction ON BuriTransaction
(
       Btid                         ASC
);


DROP TABLE BuriBranch;

CREATE TABLE BuriBranch (
       BranchID             INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
       parentBranchID       INTEGER  ,
       PathID               INTEGER  ,
       DataID               INTEGER  ,
       processDate          TIMESTAMP,
       Btid                 INTEGER NOT NULL,
       versionNo            INTEGER NOT NULL,
       PRIMARY KEY (BranchID)
);

CREATE INDEX XIF1BuriBranch ON BuriBranch
(
       PathID                         ASC
);

CREATE INDEX XIF2BuriBranch ON BuriBranch
(
       parentBranchID                 ASC
);

CREATE INDEX XIF3BuriBranch ON BuriBranch
(
       DataID                         ASC
);


DROP TABLE BuriDataPathHistory;

CREATE TABLE BuriDataPathHistory (
       historyID            INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
       PathID               INTEGER  ,
       DataID               INTEGER  ,
       action               VARCHAR(10) NOT NULL,
       BuriUserID           INTEGER,
       Btid                 INTEGER NOT NULL,
       insertDate           TIMESTAMP NOT NULL,
       PRIMARY KEY (historyID)
);

CREATE INDEX XIF3BuriDataPathHi ON BuriDataPathHistory
(
       PathID                         ASC
);

CREATE INDEX XIF4BuriDataPathHi ON BuriDataPathHistory
(
       DataID                         ASC
);


DROP TABLE BuriData;

CREATE TABLE BuriData (
       DataID               INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
       pkeyVal              VARCHAR(250),
       pkeyNum              INTEGER,
       dataType             VARCHAR(200) NOT NULL,
       InsertUserID         INTEGER  ,
       PRIMARY KEY (DataID)
);

CREATE INDEX XIF1BuriData ON BuriData
(
       InsertUserID                   ASC
);

CREATE INDEX XIE1BuriData ON BuriData
(
       pkeyVal                        ASC,
       dataType                       ASC
);

CREATE INDEX XIE2BuriData ON BuriData
(
       pkeyNum                        ASC,
       dataType                       ASC
);


DROP TABLE BuriPath;

CREATE TABLE BuriPath (
       PathID               INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
       PathName             VARCHAR(100) NOT NULL,
       RealPathName         VARCHAR(100) NOT NULL,
       pathType             INTEGER,
       PRIMARY KEY (PathID)
);
CREATE INDEX XIE0BuriPath ON BuriPath
(
       PathID                       ASC
);

CREATE INDEX XIE1BuriPath ON BuriPath
(
       PathName                       ASC
);

CREATE INDEX XIE2BuriPath ON BuriPath
(
       RealPathName                       ASC
);

CREATE INDEX XIE3BuriPath ON BuriPath
(
       pathType                       ASC
);


DROP TABLE BuriUser;

CREATE TABLE BuriUser (
       BuriUserID           INTEGER NOT NULL generated by default
				AS IDENTITY( 
					START WITH 1,
					INCREMENT BY 1),
       UserIDVal            VARCHAR(100),
       UserIDNum            INTEGER,
       PRIMARY KEY (BuriUserID)
);

CREATE INDEX XIE2BuriUser ON BuriUser
(
       UserIDVal                        ASC,
       UserIDNum                       ASC
);


