マニュアル

1 一般情報

1-1 buri概要

buriはまこたんによって開発、提供、サポートが行われています。
buriのWebサイト(http://s2buri.sandbox.seasar.org/)にはburiに関する最新情報が掲載されています。
buriの商用サポートは株式会社スターロジックがGFlowという名前でサポートしています。
http://www.starlogic.jp/GFLOW/index.html


紹介

buriは業務フロー実行ツールである。

業務フロー実行ツールは業務フローを管理するツールである。業務フローは簡単なマスメン画面から複雑な認証系システムまで様々なモノがある。ワークフローを扱うにはburiの様なライブラリを使うことで実装を簡略化し、業務フローに関する仕様変更に強くすることが出来る。

1-1-1 buriの歴史

当初は単純なフローのみを対象にハマチを作りました。しかし、いくつかの実装をしてみた結果、ハマチに決定的に欠けている機能があるという結論に至りました。これら反省点を元に、あたらしくburiを開発することになりました。

buriの名前の由来は、元々ワークフローエンジン(Enhydra Shark)をSeasar(DIContainer)上で動作させる事を目的に鮫大根(Shark DICon)を作る話が、ワークフローエンジンを使わずにそのエディタ(JaWE)だけ流用して新しいFlowEngineを開発する事を目的に「ぶり大根(通称:b8n)」をスタートさせたのがきっかけでその結果生まれたのが、「ハマチ」です

そのハマチのフルスクラッチでのバージョンアップ版がburi 0.2.0になりました。

その後のぶりに対してのリクエストや高速化案等を元に大幅に改良され新たに0.3.0が開発されました。

1-1-2 buriの主な機能

buriの重要な特徴の一部を以下で説明します

・ほとんどのワークフローパターンに対応可能
・データとフローを対にして保存が可能
・interfaceにbao.interceptorを設定するだけで呼びだし可能
・ユーザの権限などの情報を元にActivityを自動的に選択・実行できる
・あるActivityに保存されているデータ(もしくはそのIDの一覧)を取得可能
・指定時刻に自動的にフローを実行可能
・フローに渡したデータは自動的に保存される
・Javaのみで記述されている
・JDK1.4以上が動作するすべての環境で動作する
・データの保持のためにS2Daoが対応してるRDBが必要
・Excelにルールを記述するだけのルールライブラリを搭載
・ある状態にあるデータをSQLを使って問い合わせが可能

1-2 buriのサポートとライセンス

1-2-1 StarLogicによって提供されるサポート

株式会社スターロジックで商用サポートを提供しています
詳しくはinfo@starlogic.jpまで

1-2-2 buriで使用されているライブラリとライセンス

必須：
seasar2	Apache License, Version 2.0
	http://www.seasar.org
s2-dao	Apache License, Version 2.0
	http://www.seasar.org
FreeMarker	2.3.3以上	BSD-style license
	http://freemarker.sourceforge.net/

s2coffee	Apache License, Version 2.0
	http://www.seasar.org
s2coffee-script	Apache License, Version 2.0
	http://www.seasar.org

janino	2.4.3以上
	http://www.janino.net/　New BSD License


buri独自のjar(配布ファイルに準備済み)
buri-x.x.x.jar


機能別に必要なjar
・権限をExcelに記述する機能
Java Excel API	2.5.8以上	free software 
	http://www.andykhan.com/jexcelapi/index.html

・テスト用
Apache Derby	10.1.1.0以上	 Apache License, Version 2.0
	http://db.apache.org/derby/

バージョンが限定されているモノに関してはそのバージョンのjarを準備してください

Maven用にpom.xmlを準備しています。

1-2-3 buriライセンス

Seasar2と同じApache License, Version 2.0です。

1-2-4 GNU Lesser General Public License

GNU Lesser General Public License
Version 2.1, February 1999

Copyright (C) 1991, 1999 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.

[This is the first released version of the Lesser GPL. It also counts as the successor of the GNU Library Public License, version 2, hence the version number 2.1.]

Preamble
The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. 

This license, the Lesser General Public License, applies to some specially designated software packages--typically libraries--of the Free Software Foundation and other authors who decide to use it. You can use it too, but we suggest you first think carefully about whether this license or the ordinary General Public License is the better strategy to use in any particular case, based on the explanations below. 

When we speak of free software, we are referring to freedom of use, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish); that you receive source code or can get it if you want it; that you can change the software and use pieces of it in new free programs; and that you are informed that you can do these things.

To protect your rights, we need to make restrictions that forbid distributors to deny you these rights or to ask you to surrender these rights. These restrictions translate to certain responsibilities for you if you distribute copies of the library or if you modify it. 

For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you. You must make sure that they, too, receive or can get the source code. If you link other code with the library, you must provide complete object files to the recipients, so that they can relink them with the library after making changes to the library and recompiling it. And you must show them these terms so they know their rights. 

We protect your rights with a two-step method: (1) we copyright the library, and (2) we offer you this license, which gives you legal permission to copy, distribute and/or modify the library. 

To protect each distributor, we want to make it very clear that there is no warranty for the free library. Also, if the library is modified by someone else and passed on, the recipients should know that what they have is not the original version, so that the original author's reputation will not be affected by problems that might be introduced by others. 

Finally, software patents pose a constant threat to the existence of any free program. We wish to make sure that a company cannot effectively restrict the users of a free program by obtaining a restrictive license from a patent holder. Therefore, we insist that any patent license obtained for a version of the library must be consistent with the full freedom of use specified in this license. 

Most GNU software, including some libraries, is covered by the ordinary GNU General Public License. This license, the GNU Lesser General Public License, applies to certain designated libraries, and is quite different from the ordinary General Public License. We use this license for certain libraries in order to permit linking those libraries into non-free programs. 

When a program is linked with a library, whether statically or using a shared library, the combination of the two is legally speaking a combined work, a derivative of the original library. The ordinary General Public License therefore permits such linking only if the entire combination fits its criteria of freedom. The Lesser General Public License permits more lax criteria for linking other code with the library. 

We call this license the "Lesser" General Public License because it does Less to protect the user's freedom than the ordinary General Public License. It also provides other free software developers Less of an advantage over competing non-free programs. These disadvantages are the reason we use the ordinary General Public License for many libraries. However, the Lesser license provides advantages in certain special circumstances. 

For example, on rare occasions, there may be a special need to encourage the widest possible use of a certain library, so that it becomes a de-facto standard. To achieve this, non-free programs must be allowed to use the library. A more frequent case is that a free library does the same job as widely used non-free libraries. In this case, there is little to gain by limiting the free library to free software only, so we use the Lesser General Public License. 

In other cases, permission to use a particular library in non-free programs enables a greater number of people to use a large body of free software. For example, permission to use the GNU C Library in non-free programs enables many more people to use the whole GNU operating system, as well as its variant, the GNU/Linux operating system. 

Although the Lesser General Public License is Less protective of the users' freedom, it does ensure that the user of a program that is linked with the Library has the freedom and the wherewithal to run that program using a modified version of the Library. 

The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a "work based on the library" and a "work that uses the library". The former contains code derived from the library, whereas the latter must be combined with the library in order to run. 

TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
0. This License Agreement applies to any software library or other program which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Lesser General Public License (also called "this License"). Each licensee is addressed as "you".

A "library" means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables. 

The "Library", below, refers to any such software library or work which has been distributed under these terms. A "work based on the Library" means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term "modification".) 

"Source code" for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library.

Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does. 

1. You may copy and distribute verbatim copies of the Library's complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library. 

You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 

2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: 

a) The modified work must itself be a software library. 

b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change.

c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License. 

d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful. 

(For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.) 

These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. 

Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library. 

In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 

3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices. 

Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy. 

This option is useful when you wish to copy part of the code of the Library into a program that is not a library. 

4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange. 

If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code.

5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a "work that uses the Library". Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. 

However, linking a "work that uses the Library" with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a "work that uses the library". The executable is therefore covered by this License. Section 6 states terms for distribution of such executables. 

When a "work that uses the Library" uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law. 

If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.) 

Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself. 

6. As an exception to the Sections above, you may also combine or link a "work that uses the Library" with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer's own use and reverse engineering for debugging such modifications. 

You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things: 

a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable "work that uses the Library", as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.) 

b) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (1) uses at run time a copy of the library already present on the user's computer system, rather than copying library functions into the executable, and (2) will operate properly with a modified version of the library, if the user installs one, as long as the modified version is interface-compatible with the version that the work was made with. 

c) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution. 

d) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place. 

e) Verify that the user has already received a copy of these materials or that you have already sent this user a copy.

For an executable, the required form of the "work that uses the Library" must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the materials to be distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. 

It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute. 

7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things: 

a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above. 

b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work.

8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 

9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it. 

10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties with this License. 

11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library. 

If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances. 

It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. 

This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 

12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 

13. The Free Software Foundation may publish revised and/or new versions of the Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.

Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and "any later version", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation. 

14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. 

NO WARRANTY 

15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 

16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 

END OF TERMS AND CONDITIONS
How to Apply These Terms to Your New Libraries
If you develop a new library, and you want it to be of the greatest possible use to the public, we recommend making it free software that everyone can redistribute and change. You can do so by permitting redistribution under these terms (or, alternatively, under the terms of the ordinary General Public License). 

To apply these terms, attach the following notices to the library. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the "copyright" line and a pointer to where the full notice is found. 

<one line to give the library's name and an idea of what it does.> Copyright (C) <year> <name of author> 

This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA 

Also add information on how to contact you by electronic and paper mail. 

You should also get your employer (if you work as a programmer) or your school, if any, to sign a "copyright disclaimer" for the library, if necessary. Here is a sample; alter the names: 

Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a library for tweaking knobs) written by James Random Hacker.

signature of Ty Coon, 1 April 1990
Ty Coon, President of Vice

That's all there is to it! 

1-2-5 FreeMarker

FreeMarker 1.x was released under the LGPL license. Later, by community
consensus, we have switched over to a BSD-style license. As of FreeMarker
2.2pre1, the original author, Benjamin Geer, has relinquished the copyright in
behalf of Visigoth Software Society. The current copyright holder is the
Visigoth Software Society.

------------------------------------------------------------------------------
Copyright (c) 2003 The Visigoth Software Society. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1.  Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.

2.  The end-user documentation included with the redistribution, if any, must
    include the following acknowlegement:
      "This product includes software developed by the 
      Visigoth Software Society (http://www.visigoths.org/)."
    Alternately, this acknowlegement may appear in the software itself, if and
    wherever such third-party acknowlegements normally appear.

3.  Neither the name "FreeMarker", "Visigoth", nor any of the names of the
    project contributors may be used to endorse or promote products derived
    from this software without prior written permission. For written
    permission, please contact visigoths@visigoths.org.

4.  Products derived from this software may not be called "FreeMarker" or
    "Visigoth" nor may "FreeMarker" or "Visigoth" appear in their names
    without prior written permission of the Visigoth Software Society.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
VISIGOTH SOFTWARE SOCIETY OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
------------------------------------------------------------------------------

This software consists of voluntary contributions made by many individuals on
behalf of the Visigoth Software Society. For more information on the Visigoth
Software Society, please see http://www.visigoths.org/

1-2-6 Mozilla Public License 1.0

                           MOZILLA PUBLIC LICENSE
                                Version 1.0

                              ----------------

1. Definitions.

     1.1. ``Contributor'' means each entity that creates or contributes to
     the creation of Modifications.

     1.2. ``Contributor Version'' means the combination of the Original
     Code, prior Modifications used by a Contributor, and the Modifications
     made by that particular Contributor.

     1.3. ``Covered Code'' means the Original Code or Modifications or the
     combination of the Original Code and Modifications, in each case
     including portions thereof.

     1.4. ``Electronic Distribution Mechanism'' means a mechanism generally
     accepted in the software development community for the electronic
     transfer of data.

     1.5. ``Executable'' means Covered Code in any form other than Source
     Code.

     1.6. ``Initial Developer'' means the individual or entity identified as
     the Initial Developer in the Source Code notice required by Exhibit A.

     1.7. ``Larger Work'' means a work which combines Covered Code or
     portions thereof with code not governed by the terms of this License.

     1.8. ``License'' means this document.

     1.9. ``Modifications'' means any addition to or deletion from the
     substance or structure of either the Original Code or any previous
     Modifications. When Covered Code is released as a series of files, a
     Modification is:

          A. Any addition to or deletion from the contents of a file
          containing Original Code or previous Modifications.

          B. Any new file that contains any part of the Original Code or
          previous Modifications.

     1.10. ``Original Code'' means Source Code of computer software code
     which is described in the Source Code notice required by Exhibit A as
     Original Code, and which, at the time of its release under this License
     is not already Covered Code governed by this License.

     1.11. ``Source Code'' means the preferred form of the Covered Code for
     making modifications to it, including all modules it contains, plus any
     associated interface definition files, scripts used to control
     compilation and installation of an Executable, or a list of source code
     differential comparisons against either the Original Code or another
     well known, available Covered Code of the Contributor's choice. The
     Source Code can be in a compressed or archival form, provided the
     appropriate decompression or de-archiving software is widely available
     for no charge.

     1.12. ``You'' means an individual or a legal entity exercising rights
     under, and complying with all of the terms of, this License or a future
     version of this License issued under Section 6.1. For legal entities,
     ``You'' includes any entity which controls, is controlled by, or is
     under common control with You. For purposes of this definition,
     ``control'' means (a) the power, direct or indirect, to cause the
     direction or management of such entity, whether by contract or
     otherwise, or (b) ownership of fifty percent (50%) or more of the
     outstanding shares or beneficial ownership of such entity.

2. Source Code License.

     2.1. The Initial Developer Grant.
     The Initial Developer hereby grants You a world-wide, royalty-free,
     non-exclusive license, subject to third party intellectual property
     claims:

          (a) to use, reproduce, modify, display, perform, sublicense and
          distribute the Original Code (or portions thereof) with or without
          Modifications, or as part of a Larger Work; and

          (b) under patents now or hereafter owned or controlled by Initial
          Developer, to make, have made, use and sell (``Utilize'') the
          Original Code (or portions thereof), but solely to the extent that
          any such patent is reasonably necessary to enable You to Utilize
          the Original Code (or portions thereof) and not to any greater
          extent that may be necessary to Utilize further Modifications or
          combinations.

     2.2. Contributor Grant.
     Each Contributor hereby grants You a world-wide, royalty-free,
     non-exclusive license, subject to third party intellectual property
     claims:

          (a) to use, reproduce, modify, display, perform, sublicense and
          distribute the Modifications created by such Contributor (or
          portions thereof) either on an unmodified basis, with other
          Modifications, as Covered Code or as part of a Larger Work; and

          (b) under patents now or hereafter owned or controlled by
          Contributor, to Utilize the Contributor Version (or portions
          thereof), but solely to the extent that any such patent is
          reasonably necessary to enable You to Utilize the Contributor
          Version (or portions thereof), and not to any greater extent that
          may be necessary to Utilize further Modifications or combinations.

3. Distribution Obligations.

     3.1. Application of License.
     The Modifications which You create or to which You contribute are
     governed by the terms of this License, including without limitation
     Section 2.2. The Source Code version of Covered Code may be distributed
     only under the terms of this License or a future version of this
     License released under Section 6.1, and You must include a copy of this
     License with every copy of the Source Code You distribute. You may not
     offer or impose any terms on any Source Code version that alters or
     restricts the applicable version of this License or the recipients'
     rights hereunder. However, You may include an additional document
     offering the additional rights described in Section 3.5.

     3.2. Availability of Source Code.
     Any Modification which You create or to which You contribute must be
     made available in Source Code form under the terms of this License
     either on the same media as an Executable version or via an accepted
     Electronic Distribution Mechanism to anyone to whom you made an
     Executable version available; and if made available via Electronic
     Distribution Mechanism, must remain available for at least twelve (12)
     months after the date it initially became available, or at least six
     (6) months after a subsequent version of that particular Modification
     has been made available to such recipients. You are responsible for
     ensuring that the Source Code version remains available even if the
     Electronic Distribution Mechanism is maintained by a third party.

     3.3. Description of Modifications.
     You must cause all Covered Code to which you contribute to contain a
     file documenting the changes You made to create that Covered Code and
     the date of any change. You must include a prominent statement that the
     Modification is derived, directly or indirectly, from Original Code
     provided by the Initial Developer and including the name of the Initial
     Developer in (a) the Source Code, and (b) in any notice in an
     Executable version or related documentation in which You describe the
     origin or ownership of the Covered Code.

     3.4. Intellectual Property Matters

          (a) Third Party Claims.
          If You have knowledge that a party claims an intellectual property
          right in particular functionality or code (or its utilization
          under this License), you must include a text file with the source
          code distribution titled ``LEGAL'' which describes the claim and
          the party making the claim in sufficient detail that a recipient
          will know whom to contact. If you obtain such knowledge after You
          make Your Modification available as described in Section 3.2, You
          shall promptly modify the LEGAL file in all copies You make
          available thereafter and shall take other steps (such as notifying
          appropriate mailing lists or newsgroups) reasonably calculated to
          inform those who received the Covered Code that new knowledge has
          been obtained.

          (b) Contributor APIs.
          If Your Modification is an application programming interface and
          You own or control patents which are reasonably necessary to
          implement that API, you must also include this information in the
          LEGAL file.

     3.5. Required Notices.
     You must duplicate the notice in Exhibit A in each file of the Source
     Code, and this License in any documentation for the Source Code, where
     You describe recipients' rights relating to Covered Code. If You
     created one or more Modification(s), You may add your name as a
     Contributor to the notice described in Exhibit A. If it is not possible
     to put such notice in a particular Source Code file due to its
     structure, then you must include such notice in a location (such as a
     relevant directory file) where a user would be likely to look for such
     a notice. You may choose to offer, and to charge a fee for, warranty,
     support, indemnity or liability obligations to one or more recipients
     of Covered Code. However, You may do so only on Your own behalf, and
     not on behalf of the Initial Developer or any Contributor. You must
     make it absolutely clear than any such warranty, support, indemnity or
     liability obligation is offered by You alone, and You hereby agree to
     indemnify the Initial Developer and every Contributor for any liability
     incurred by the Initial Developer or such Contributor as a result of
     warranty, support, indemnity or liability terms You offer.

     3.6. Distribution of Executable Versions.
     You may distribute Covered Code in Executable form only if the
     requirements of Section 3.1-3.5 have been met for that Covered Code,
     and if You include a notice stating that the Source Code version of the
     Covered Code is available under the terms of this License, including a
     description of how and where You have fulfilled the obligations of
     Section 3.2. The notice must be conspicuously included in any notice in
     an Executable version, related documentation or collateral in which You
     describe recipients' rights relating to the Covered Code. You may
     distribute the Executable version of Covered Code under a license of
     Your choice, which may contain terms different from this License,
     provided that You are in compliance with the terms of this License and
     that the license for the Executable version does not attempt to limit
     or alter the recipient's rights in the Source Code version from the
     rights set forth in this License. If You distribute the Executable
     version under a different license You must make it absolutely clear
     that any terms which differ from this License are offered by You alone,
     not by the Initial Developer or any Contributor. You hereby agree to
     indemnify the Initial Developer and every Contributor for any liability
     incurred by the Initial Developer or such Contributor as a result of
     any such terms You offer.

     3.7. Larger Works.
     You may create a Larger Work by combining Covered Code with other code
     not governed by the terms of this License and distribute the Larger
     Work as a single product. In such a case, You must make sure the
     requirements of this License are fulfilled for the Covered Code.

4. Inability to Comply Due to Statute or Regulation.

     If it is impossible for You to comply with any of the terms of this
     License with respect to some or all of the Covered Code due to statute
     or regulation then You must: (a) comply with the terms of this License
     to the maximum extent possible; and (b) describe the limitations and
     the code they affect. Such description must be included in the LEGAL
     file described in Section 3.4 and must be included with all
     distributions of the Source Code. Except to the extent prohibited by
     statute or regulation, such description must be sufficiently detailed
     for a recipient of ordinary skill to be able to understand it.

5. Application of this License.

     This License applies to code to which the Initial Developer has
     attached the notice in Exhibit A, and to related Covered Code.

6. Versions of the License.

     6.1. New Versions.
     Netscape Communications Corporation (``Netscape'') may publish revised
     and/or new versions of the License from time to time. Each version will
     be given a distinguishing version number.

     6.2. Effect of New Versions.
     Once Covered Code has been published under a particular version of the
     License, You may always continue to use it under the terms of that
     version. You may also choose to use such Covered Code under the terms
     of any subsequent version of the License published by Netscape. No one
     other than Netscape has the right to modify the terms applicable to
     Covered Code created under this License.

     6.3. Derivative Works.
     If you create or use a modified version of this License (which you may
     only do in order to apply it to code which is not already Covered Code
     governed by this License), you must (a) rename Your license so that the
     phrases ``Mozilla'', ``MOZILLAPL'', ``MOZPL'', ``Netscape'', ``NPL'' or
     any confusingly similar phrase do not appear anywhere in your license
     and (b) otherwise make it clear that your version of the license
     contains terms which differ from the Mozilla Public License and
     Netscape Public License. (Filling in the name of the Initial Developer,
     Original Code or Contributor in the notice described in Exhibit A shall
     not of themselves be deemed to be modifications of this License.)

7. DISCLAIMER OF WARRANTY.

     COVERED CODE IS PROVIDED UNDER THIS LICENSE ON AN ``AS IS'' BASIS,
     WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
     WITHOUT LIMITATION, WARRANTIES THAT THE COVERED CODE IS FREE OF
     DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING.
     THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED CODE
     IS WITH YOU. SHOULD ANY COVERED CODE PROVE DEFECTIVE IN ANY RESPECT,
     YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE
     COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER
     OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF
     ANY COVERED CODE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.

8. TERMINATION.

     This License and the rights granted hereunder will terminate
     automatically if You fail to comply with terms herein and fail to cure
     such breach within 30 days of becoming aware of the breach. All
     sublicenses to the Covered Code which are properly granted shall
     survive any termination of this License. Provisions which, by their
     nature, must remain in effect beyond the termination of this License
     shall survive.

9. LIMITATION OF LIABILITY.

     UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT
     (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL THE INITIAL
     DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED CODE,
     OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO YOU OR ANY OTHER
     PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
     OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF
     GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND
     ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE
     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF
     LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY
     RESULTING FROM SUCH PARTY'S NEGLIGENCE TO THE EXTENT APPLICABLE LAW
     PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE
     EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THAT
     EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.

10. U.S. GOVERNMENT END USERS.

     The Covered Code is a ``commercial item,'' as that term is defined in
     48 C.F.R. 2.101 (Oct. 1995), consisting of ``commercial computer
     software'' and ``commercial computer software documentation,'' as such
     terms are used in 48 C.F.R. 12.212 (Sept. 1995). Consistent with 48
     C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995),
     all U.S. Government End Users acquire Covered Code with only those
     rights set forth herein.

11. MISCELLANEOUS.

     This License represents the complete agreement concerning subject
     matter hereof. If any provision of this License is held to be
     unenforceable, such provision shall be reformed only to the extent
     necessary to make it enforceable. This License shall be governed by
     California law provisions (except to the extent applicable law, if any,
     provides otherwise), excluding its conflict-of-law provisions. With
     respect to disputes in which at least one party is a citizen of, or an
     entity chartered or registered to do business in, the United States of
     America: (a) unless otherwise agreed in writing, all disputes relating
     to this License (excepting any dispute relating to intellectual
     property rights) shall be subject to final and binding arbitration,
     with the losing party paying all costs of arbitration; (b) any
     arbitration relating to this Agreement shall be held in Santa Clara
     County, California, under the auspices of JAMS/EndDispute; and (c) any
     litigation relating to this Agreement shall be subject to the
     jurisdiction of the Federal Courts of the Northern District of
     California, with venue lying in Santa Clara County, California, with
     the losing party responsible for costs, including without limitation,
     court costs and reasonable attorneys fees and expenses. The application
     of the United Nations Convention on Contracts for the International
     Sale of Goods is expressly excluded. Any law or regulation which
     provides that the language of a contract shall be construed against the
     drafter shall not apply to this License.

12. RESPONSIBILITY FOR CLAIMS.

     Except in cases where another Contributor has failed to comply with
     Section 3.4, You are responsible for damages arising, directly or
     indirectly, out of Your utilization of rights under this License, based
     on the number of copies of Covered Code you made available, the
     revenues you received from utilizing such rights, and other relevant
     factors. You agree to work with affected parties to distribute
     responsibility on an equitable basis.

EXHIBIT A.

     ``The contents of this file are subject to the Mozilla Public License
     Version 1.0 (the "License"); you may not use this file except in
     compliance with the License. You may obtain a copy of the License at
     http://www.mozilla.org/MPL/

     Software distributed under the License is distributed on an "AS IS"
     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
     License for the specific language governing rights and limitations
     under the License.

     The Original Code is ______________________________________.

     The Initial Developer of the Original Code is ________________________.
     Portions created by ______________________ are Copyright (C) ______
     _______________________. All Rights Reserved.

     Contributor(s): ______________________________________.''

1-2-7 Apache License, Version 2.0

                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "[]"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

1-3 buriの情報源

ぶりプロジェクトでは開発者やユーザの距離を縮めるためにSNSを作っています。
makotan @ gmail.com宛にSNSに入りたいというメールを送ってください(簡単で良いです)

2 buriのインストール

2-1 システム要件

Derby
PostgreSQL 8
JDK1.4以上

DBに関しては2006/8/8時点の情報です。S2Daoに対応してるRDBであれば必要に応じて追加することが可能です。

Mavan2を利用する場合は
repositoryにhttp://maven.seasar.org/maven2を追加して
groupId:org.seasar.buri
artifactId:s2-buri
を指定してください
versionはその時点で使いたいバージョン番号にあわせてください

Maven2ではDerby等のテスト用jarは追加されませんので必要に応じてぶりのpom.xmlを見ながら追加してください

2-2 必要なファイルと手順

Zipで配布しているファイルを解凍してください

Maven2とEclipse上で使う場合はEclipseのMaven2 plug-inが必要です。
http://maven.apache.org/
http://m2eclipse.codehaus.org/
Maven2に関しては
http://wiki.fdiary.net/maven2/?CookBook
ここを見ながら設定してください


pluginを設定した後プロジェクトをimportすると必要なjarが取得されるハズです。
最初の一回はかなり時間がかかると思うので我慢して待ってください
もし上手く動かないときはMLかSNSかBlog等で状況を教えてくださいm(__)m


手作業でJarを設定する場合には
・S2本体
・S2-Dao
・buriのlibファイルにあるjar
が必要です

Seasarのバージョンが古い場合はバージョンアップしても基本的には動作します。

src/test/resourcesフォルダのburi.diconフォルダのdiconファイルがぶりの動作に必要なファイル群です。
他にs2が必要とするファイルやpropertiesファイルは必要だと思うので追加してください

log4j.propertiesはSampleとして提供しています。

もし新規にDBを作る必要がある場合はdbフォルダにあるcreatedb_derby.sqlでburiに必要なテーブルを作成してください。
ただし、zipファイルの中のdbフォルダの内容は既にテーブルを作成済みの状況になっています。

もし、UnitTestを動かしたい場合はunitTestTable_derby.sqlでテーブルを作成してください

2-3 インストール関連の一般的な問題

必要に応じて追加する

2-3-1 buriの入手方法

http://www.seasar.org
からどうぞ

3 buriチュートリアル

3-1 XPDLの作成および使用

3-1-1 実行環境を準備する

開発環境で実行用の準備をしてください
＃buriのインストールを参照

ここで使うDBの項目等に関してはUnitTest用の項目と全く同じです。

3-1-2 Daoの作成および準備

まずはフロー上で使うDaoとDtoを普通に作って、diconファイルも作ります。

ここで使うSampleはtestフォルダにすべてあります。
test\org\seasar\buri\

Daoの名前：FurnitureItemDao
Dto：org.seasar.buri.dto.FurnitureItemDto
とします。

3-1-3 XPDLの新規作成および基本的な準備

JaWEを起動して閉じないスプラッシュウィンドウを閉じて
File=>Newをした後IDをFurnitureManagement、Nameを資産管理と設定します。

準備は
・Applications
・Paticipants
の2つが必要です

3-1-3-1 Applications

Packageタブかメニューから
Applicationsを開いてNewボタンを押します
NameにOgnlInvoker
を入れて閉じます

3-1-3-2 Paticipants

Packageタブかメニューから
Paticipantsを開いてNewボタンを押します
Nameに備品管理担当
を入れて戻ります

PaticipantsダイアログもOKボタンで閉じます

3-1-4 XPDLにフローを記述する

PackageメニューからInsert new processを選びます
新たに出来たProcessをダブルクリックしてWorkflow processを表示、Nameを「備品管理」に変更します。

備品管理プロセスを選択して右クリックでEditを選択します

FurnitureManagement.xpdlの様にGeneric Activityを並べてTransitionでつないでいきます。
それぞれのActivityで右クリックしてプロパティーを表示して、Nameを変更します。

利用中と償却期間終了とリース終了の３つのActivityに関してはFinish modeをAutomaticからManualへ変更します

期間終了から償却期間終了へ向かうTransitionを選択して、ConditionのExpressionに#data.isBuying() == trueを設定します
期間終了からリース終了へ向かうTransitionを選択して、ConditionのExpressionに#data.isLease() == trueを選択します
これでフローは準備が出来たので、開発環境のCLASSPATH上に配置します。

3-2 buriを使っての実行およびデータの取得

ここからは開発環境で操作していきます

3-2-1 準備する

まずはさっき作ったXPDLを使えるように設定します。

buri-user.diconを開いて
BuriEngineConfigのコンポーネントにさっきのファイルを登録します
<initMethod name="addResourceConfig">
	<arg>"wakanagoxpdl/FurnitureManagement.xpdl"</arg>
	<arg>"資産管理"</arg>
</initMethod>

"FurnitureManagement.xpdl"はさっき保存したCLASSPATH上のファイル名です。

必要なmainメソッドやテストケースを作ります
ここではUnitTestで試すことを前提に記述していきます

3-2-1-1 Baoを準備する

buriにアクセスするためのinterfaceを定義します

public interface FurnitureManagementBao {
    public static String PROCESS = "資産管理.備品管理";

    public static BuriConvert CONVERTER[] = new BuriConvert[]{
        new BuriConvert(Long.class,"FurnitureItemDao.getFurnitureItem(#data)")
    };
    
    public static String getNowUse_ACTIVITY = "利用中";
    public List getNowUse();
    
    public static String findNowUse_ACTIVITY = "利用中";
    public List findNowUse(FurnitureItemDto findDto);
    
    public static String getEndDepreciation_ACTIVITY = "償却期間終了";
    public List getEndDepreciation();
    
    public static String getEndLease_ACTIVITY = "リース終了";
    public List getEndLease();
    
    public static String enterItem_ACTIVITY = "備品登録";
    public void enterItem(FurnitureItemDto dto);

    public static String timeorverItem_ACTIVITY = "利用中";
    public void timeorverItem(long itemID);
}

3-2-1-2 UnitTestを準備

UnitTestを準備します

まずはUnitTestで使うdiconファイル(FurnitureManagement.diconと仮定)
<include path="buri/dicon/bao.dicon"/>
配布ファイルに含まれているbao.diconをinclude

<include path="org/seasar/buri/dicon/allTestDao.dicon"/>
FurnitureManagementのDaoへアクセスするための設定

<component class="org.seasar.buri.bao.FurnitureManagementBao">
	<aspect>bao.interceptor</aspect>
</component>


準備済みのモノは配布ファイルの中の
src/test/resources/org/seasar/buri/bao/test/dicon/FurnitureManagement.dicon
ここにあります

普通にTestCaseを作り、継承するクラスで
S2TestCase
を指定します

private String PATH = "org/seasar/buri/bao/test/dicon/FurnitureManagement.dicon";

ここまで準備します
private BuriEngine buriEngine_;
private FurnitureManagementBao fmBao_;

public FurnitureManagementBaoTest(String arg0) {
super(arg0);
}

protected void setUp() throws Exception {
super.setUp();
include("org/seasar/buri/bao/test/dicon/FurnitureManagement.dicon");
}

public void testFMBaoTx() {
}

この後の作業はすべて testFMBaoTxへの追加になります

3-2-2 フローを実行する

まずはDtoを準備します

FurnitureItemDto buyItemDto = new FurnitureItemDto();
buyItemDto.setName("T45_001");
buyItemDto.setType("PC");
buyItemDto.setAcquisitionTypeBuy();
buyItemDto.setAcquisition(new Date());

実行用のメソッドを追加します
fmBao_.enterItem(buyItemDto);

これだけでさっき書いたフローの備品登録が呼びだされ、利用中として保持されます。

3-2-3 フローからデータを取得する

実際に利用中に保存されているか確認してみます

List datas;

datas = fmBao_.getNowUse();
System.out.println(datas);

これを追加して実行するとさっき登録したDtoの値がコンソールに出力されます。

3-2-4 さらに・・・

このままでは単純に保存したのとそれほど違いがなかったので、更に数行追加してみましょう

まずはさっき利用中になっている状態からさらに実行継続
fmBao_.timeorverItem(buyItemDto);

利用中に無いことを確認
datas = fmBao_.getNowUse();
System.out.println(datas);

買った備品なので、償却期間終了になってます
datas = fmBao_.getEndDepreciation();
System.out.println(datas);


このようにburiでは簡単な呼び出しとXDPLによるフローの記述だけでワークフローを簡単に実行できるようになっています。

更に大きなフローを見てみたい場合はtestフォルダのpetition.xpdlやorderBao.xpdlを参考にしてください
良くありがちなワークフローの一部を書いてます。

3-3 指定時刻に自動的にフローを実行

buriでは指定時刻にフローを自動実行する機能があります。
app.dicon等にserviceManager.diconをincludeします
ActivityのプロパティーのLimitにCalendar型を返すOGNL式を設定してください
その日時になったときに自動的に実行します

自動実行時にはContextの#autoActionにtrueが入ります。
通常#autoActionはnullです。

4 buriリファレンス

4-1 XPDL

XPDL上に記述するいろんな事を

4-1-1 Workflow relevant data

ぶりは任意のDto(Entity)のライフサイクルを管理するライブラリです。Dtoの保存のタイミングや取得等をするためにXPDLにぶりのデータ定義とそのアクセス方法を記述する必要があります。
ただし、データ定義とアクセス方法は割と単純な事が多いのである種のDtoに関しては完全に省略可能になっています。

とりあえずXPDLには
Idにクラス名、ExtendedAttributeの
Name：pkey　　(主キーの判定方法)
Value：(主キーのプロパティー名),(主キーが有効と言うことを確認するための式、戻り値はboolean)

Name:insert
Name:update
Name:select
Name:selectMany(オプション)
Name:delete
でValueにはそれぞれの方法でアクセスする為のOgnl式を記述します

さらにオプションとして
Name:preprocess(あるデータからDtoを取得するため)
があります

で、pkeyの定義とinesrt〜deleteまでは何も設定せずに自動設定に任せることが出来ます。すべてを自動設定に任せる場合にはXPDL上にデータの定義すら不要です。
一部だけ定義をして他を自動設定に任せる場合は、定義したい部分だけ記述すれば不足部分は自動で補完します。

自動設定するための条件は
・DtoがLong型の主キーを一つだけ持つこと。
・Dtoにプロパティー名_IDという名前の定数アノテーションが存在していること
・パッケージを除くクラス名からDtoとEntityという名前を削ってDaoを後ろに付けた名前でdiconから探せること
もしくはBuriConfigurationでDaoの位置を設定して、そのDaoがContainerに名前付きで登録してあること
・selectの時に主キーだけから検索するインタフェースがあること

という感じです。
実際にはCodeGenを使って生成したDaoがちゃんと登録されていれば何の問題もなく動作するように設計してあります。

4-1-1-1 pkey

Dtoの主キーに該当する内容と主キー有無判定の条件式を設定します

記述方法はproperty,condition
propertyはデータのプロパティー名
conditionはOGNL式で有効なときtrueを返すようにする

例）
testID,testID != 0

4-1-1-2 insert

ValueにはOgnlInvokerと同じ形式の式を入れます

大抵の場合はDaoの名前と.insert(#data)です

例）
TestDao.insert(#data)

4-1-1-3 update

ValueにはOgnlInvokerと同じ形式の式を入れます

大抵の場合はDaoの名前と.update(#data)です

例）
TestDao.update(#data)

4-1-1-4 select

ValueにはOgnlInvokerと同じ形式の式を入れます

Daoの名前と.getDtoName(#data.pkeyName)です

例）
TestDao.getTestDto(#data.testID)

4-1-1-5 selectMany

ValueにはOgnlInvokerと同じ形式の式を入れます
これは省略可能です。
Javaで複数のDtoを取得するときに効率的に取得する時に必要です。

#dataにはListで主キーだけが入ります。
このため、数値型で定義された単一の主キーが必要です。

TestDao.getTestByIds(#data)

4-1-1-6 preprocess

ValueにはOgnlInvokerと同じ形式の式を入れます
これは省略可能です。
これだけを記述してほかをすべて省略することも可能です。
特定のProcessに対して事前処理を行うために定義します
必ずProcessに対して記述してください

たとえば
Long型の主キーが渡された場合、それを自動的にDtoに変換して変換したDtoを使って呼びだしたように振る舞う。という変換のために使います

4-1-2 Applications

大抵の場合、OgnlInvokerを指定します

厳密には
diconファイルに登録されて、名前の付けられたあらゆるコンポーネントの名前を指定できます。
ただし、ぶりが認識して処理するのはBuriComponentのインタフェースを実装したクラスです。

ExtendedAttributeにafterを記述するとその処理は該当フローが終了した後で処理するようになります。

OgnlInvokerの詳細については後述

4-1-3 Paticipants

組織の階層や権限を表現します。

詳しくはユーザ権限とActivityを参照

4-1-4 プロセス

ワークフローを書くところ
ぶりはNameで探すのでName重要
ただし、コピー等をして同じNameなのに、別のIDでになったとき検索されない。

履歴機能が利用可能です
たとえば4/1より今の業務フローから新しくする場合に自動的にその日から追加されたデータを新たなフローへ流すような仕組みが簡単に構築できます
使い方はプロセスのprocess headerでValid fromとValid toに使いたい期間を設定するだけです。
デフォルトではfromは最小の日時、toは9999/12/31を指定しています。
どちらか一つだけの修正も可能です。

AとA'という二つのフローがあった場合、Aを流れていたデータは期間が来てもAを流れ続けます。新規のデータのみA'に流れます。
データの一覧取得等では同じActivity名だった場合両方のプロセスから探すようになってます。

4-1-5 アクティビティ

ワークフローでの処理の単位

Finish modeをManualにするとToolを実行した後処理を停止する

Toolタブに関しては後述

Precondition・・・Join条件を設定するところ
・Xorは複数の入力のうち先に到着した時点でActivityの処理をして、同時に分岐した他の処理を停止する
・Andは複数の入力のすべてが到着してからActivityの処理をする

XPDL上で複数の入力があるのに、単一の入力として扱いたい場合はActivityのExtended attributeにNOJOINを指定する。これで複数の入力は無視される。

XPDL上で複数の入力はないけど、到着した時点で同時に分岐した他の処理を停止したいときは、ActivityのExtended attributeにXORJOINを指定する。これで他の処理を停止することが出来る。

Postcondition・・・Split条件を指定するところ
・Xorは複数の分岐のうち一つだけが有効(単一分岐)もし、複数が条件に引っかかる場合はエラーになる
・Andは複数の分岐が同時に有効(複数分岐)同時に有効になるので、そのProcessで複数個のActivityが並行して処理される。Joinと1:1で対応する必要がある。

Postconditionでconditionを書くときは
#dataでinvokeしたときのデータを
#actionでinvokeしたときのactionを参照可能
あとは通常のJavaの記述とほぼ同じ。

4-1-6 Toolタブ

Activityの処理を追加するところ

たとえば、他のBuriを呼びだしたり、メールを送信したりと必要に応じて記述する。記述に使うのは現時点ではOgnlInvoker

4-2 ユーザ権限とActivity

buriでは権限によって使える機能を制限したり、権限によって動作を変更する場合にここに権限の一覧を記述します。
buriの標準的なInvokerはこの権限を認識して適切なActivityを実行することが可能です。

ここではその為の準備の手順と、buriがどうやってActivityを探すかについて説明します。

4-2-1 基本的な準備

まず、XPDL上ではPaticipantsを使って”同じ名前のActivityを違う権限の所に配置”します。

Javaではユーザの情報と権限の名前をマッチさせたり、IDを取得する為のクラスを作ります
ParticipantProviderを実装するか、S2AnAを利用するか、ExcelBaseParticipantProviderを利用してください

buri-user.diconファイル上にParticipantProviderを設定し、名前を付けてその名前をburi-user.diconのBuriEngineConfigの
<initMethod name="addResourceConfig">
	<arg>"wakanagoxpdl/個人情報管理.xpdl"</arg>
	<arg>"個人情報管理"</arg>
	<arg>ExcelBaseParticipantProvider</arg>
</initMethod>
3つめの引数に書きます

あとはStandardBuriInvokerを使って常にuserDataの所にParticipantProviderが処理できる情報を渡してください。

StandardBuriInvokerの詳細は後述

4-2-2 Activityの探し方

権限情報を使ってActivityを探す前に
まず、適切なActivityを検索します
データを使って最初のActivityを探します
データがあるとき：データが所属しているActivity

Activityがある場合は権限情報を使って一つを探していきます

対象のActivityの権限とuserDataの権限情報をマッチングします。

結果として一つに限定できたときはそれを実行します。
複数個のActivityが選択もしくは一つも選択できなかった場合は例外が発生します。

4-2-3 ExcelベースのParticipantProvider

ぶりは権限の上下関係をExcelに記述するとそれをParticipantProviderの内容として処理する機能をぶりは標準で持っています。
これによりRDB等で難しいSQLを一行も書くことなく権限付きのフロー制御が簡単にできるようになります

Excelのファイルに含まれているシートすべてを解析しますが、指定のフォーマットでないと判断したときやそもそもデータがない場合には無視します。

A列はvalid,convert,typeを記述します。ぶりはこれの位置を探しながら自動的に処理します。

validはオプションで、fromとtoで権限情報が有効な期間を指定します。これで特定の日付より有効にするという事が可能です。from,to共に省略可能です。その場合は最小値、最大値が自動的に設定されます

convertはuserDataからIdやnameの情報の取得、idとNameからユーザのオブジェクトの取得をします。
IDやnameを取得するときは#userDataでユーザのデータが取得できます。

typeは権限の構造を記述する部分です。
一番上に権限名を並べて
その下にid,nameの列を作ります。権限名の位置とid,nameというデータを探して処理しているのでcommentみたいな列を作ってそこに任意のコメントを設定するという事も可能です。
その下からは実際に権限構造を記述します

convertやtypeのにnameが無くても動作します。

4-3 Java

4-3-1 Bao

BaoとはBusinessLogic Access Objectの略です
S2Daoの様にinterfaceを定義してAOPを設定するだけでburiの持つすべての機能が簡単に利用できます。
仮にXPDLが未実装でもS2のモック機能を使ってモックとして動作させることも出来ます。

デフォルトでは定数アノテーションのみですが、コミッタによりTigerアノテーションもサポートされると思います

4-3-1-1 Bao定数アノテーションリファレンス

ここではBaoの定数アノテーションを説明します。
定数アノテーションはメソッドに属したアノテーションの場合、メソッド名_アノテーション名になります
ex)
void order();
String order_ACTION = "order";

4-3-1-1-1 PROCESS

PROCESS

インタフェース全体に関係するアノテーションです。
必須

特定のプロセス名を指定します
ex)
public static String PROCESS = "注文管理.注文";
注文管理の注文プロセスを対象としたインタフェースになります

4-3-1-1-2 CONVERTER

CONVERTER
値の自動変換のためのアノテーションです
オプション

主キーのidを渡されてDtoを読み込んだり、他のフローなどから呼びだされたときに別のDtoから変換するためのアノテーションです。

ex)
public static BuriConvert CONVERTER[] = new BuriConvert[]{
new BuriConvert(Long.class,"FurnitureItemDao.getFurnitureItem(#data)")
};

Long.class型の引数を発見すると自動的にFurnitureItemDao.getFurnitureItem(#data)を呼びだしてその戻り値を#dataとして処理します。

4-3-1-1-3 USERINFO

USERINFO
コンテナからユーザ情報を取得できる場合にコレを定義すると自動的にユーザ情報としてコンテナから取得して利用します。

ex)
String USERINFO = "loginUser";

4-3-1-1-4 _ACTION

_ACTION
メソッドと一緒に設定するアノテーション
オプション
フロー処理で有効

フローの中で#actionとしてフローを切り替えるときに使います。

ex)
public static String cancel_ACTION = "cancel";

4-3-1-1-5 _CONVERTER

_CONVERTER
メソッドと一緒に設定するアノテーション
オプション
フロー処理で有効

メソッド単位で別のコンバート方法を使いたい場合に指定します

ex)
public static String cancel_CONVERTER = "OrderInfoDao.getOrderInfo(#data)";

4-3-1-1-6 _RESULT

_RESULT
メソッドと一緒に設定するアノテーション
オプション
フロー処理で有効

メソッドの戻り値を設定するためのアノテーションです

ex)
public static String cancel_RESULT = "#cancelStatus";

4-3-1-1-7 _ARGS

_ARGS
メソッドと一緒に設定するアノテーション
オプション

メソッドの引数を定義する為のアノテーションです
data:Dto等のデータを渡す。
userData:ユーザ情報を渡す。
datas:カウント時の対象Dtoをリストで渡す。カウントメソッドのみ有効

4-3-1-1-8 _ACTIVITY

_ACTIVITY
メソッドと一緒に設定するアノテーション
必須

対象になるActivity名を指定します
処理系のメソッドでは複数個を,で区切って書くことが出来ます

ex)
public static String getUnderWork_ACTIVITY = "出荷作業中";
この場合出荷作業中のデータを対象に処理します

4-3-1-2 Baoのルール

Baoはメソッドの記述方法に応じて適切に処理しますが、ルール

・メソッド名
先頭がget/select/find/count
	この場合、データ取得用のメソッドとして判断します。
それ以外
	処理用メソッドとして判断します。

・戻り値
処理用メソッドでは何も制限がありません。

データ取得用のメソッドでは
・List
	データの一覧用メソッドとして扱います
	実際にはArrayListが戻ります
・Number型
	データ数取得メソッドとして扱います。

データ一覧用メソッドでは
dataという名前の引数がなければselect/selectManyが利用され、データを取得します

データ数取得メソッドは
あるデータがいくつその状態にあるのかを判断するためのメソッドです。
その為、datasという名前のList型の引数が必須です。
＃実際に使っているところはorderBao.xpdlの出荷の出荷準備中にあります

ex)
public List getUnderWork();
普通のデータ取得用のメソッドです。_ACTIVITY指定が必須

void order(OrderInfoDto dto);
処理用メソッドです。_ACTIVITY指定が必須

public long getEndShippingCount(List datas);
データの数を数えるためのメソッドです。
_ACTIVITYと_ARGSの定義が必須

public void petition(FurnitureItemDto dto,String userData);
ユーザ情報を引数に持つ処理用メソッドです。_ARGSが必須

public List getWaitApprove(String userData);
ユーザ情報を引数に持つデータ取得用のメソッドです。_ACTIVITYと_ARGSの指定が必須

public List findNowUse(FurnitureItemDto findDto);
データ検索機能付きのデータ取得用のメソッドです。_ACTIVITY指定が必須

4-3-2 ParticipantProvider

ParticipantProviderは「userData」と「XPDLのParticipant」の相互チェックの
ために必要なクラス。
ParticipantProviderインタフェースをimplementsする。

必要なメソッドは

boolean isUserInRole(Object userData,String participantName,String participantType);
userDataがXPDLで指定したparticipantNameに一致しているかをチェックする

String getUserIDString(Object userData,String participantType);
userDataから文字列のIDを取得する。文字列のIDが無いときはnullを返す

Long getUserIDNum(Object userData,String participantType);
userDataからLong型のIDを取得する。Long型のIDが無いときはnullを返す

Object getUserData(Long userIDNum,String userIDString);
上記二つのメソッドの戻り値からuserDataを再現する。

boolean hasRoleUser(ParticipantContext context);
ある権限のユーザが存在しているかどうかを確認する。
その時に使う情報はParticipantContextから取得可能です。
ぶりの場合にはBuriParticipantContextが渡されます

RoleInfo getSingleUser(ParticipantContext context);
ある権限の特定のユーザを取得する。RoleInfoはUserIDStringとUserIDNumが組み合わされたものです。

List getUser(ParticipantContext context);
ある権限の特定のユーザの一覧を取得する。リストの中身はRoleInfoです


buri2.dicon上に追加登録してreadWorkFlowFromResourceの3番目の引数に設定することで利用可能になります。

これらのコーディングディレクトリサーバ等を使用しないと意外と難易度の高いコードになると思います。それをなるべく軽減するためにExcelベースのParticipantProviderをぶりのライブラリとして提供しています。
権限情報が小規模で複雑さがそれほど無い場合にはExcelベースのParticipantProviderを選択することをお勧めします

4-3-3 OgnlInvoker

OGNL(http://www.ognl.org/)をスクリプトらしく扱えるようにしたクラス
参考：日本語で参考になるManual(http://www.seasar.org/ognl.html)


大きく#付きと#なしの値に分けられる

#付きの値はContextと言って
#data・・・Invokeしたときのデータ
#action・・・Invokeしたときのaction
が扱えるほか、任意で必要なContextの名前付きの値を作ることが出来る。
別の言い方をすればワークフロー上の変数領域

#なしの値はDIContainerに登録したコンポーネント
DIContainerに登録されて、名前付きでアクセスできるすべてのコンポーネントを参照が可能
デフォルトではrootContainerからの参照になります。

OgnlInvoker独自の機能としては
//
で始めたときにコメント文として処理

式を評価した結果はログ出力されます

4-3-4 path

ぶりのPathの構造は
"package"."process"."activity"

packageはburi2.diconのBuriEngineConfigの所に設定する
設定方法のSampleは
<initMethod name="addResourceConfig">
	<arg>"wakanagoxpdl/個人情報管理.xpdl"</arg>
	<arg>"個人情報管理"</arg>
	<arg>ExcelBaseParticipantProvider</arg>
</initMethod>
この場合packageは個人情報管理になる。

processはJaWEで開く最初の所に出ている名前を指定する

activityはprocessを開いたときの名前を指定する

4-3-5 Invoker

Baoの下位層にあるProcessorでぶりを制御するには
SimpleBuriProcessorもしくはStandardBuriProcessorもしくはBuriAutoSelectProcessorを呼びだすコンポーネントがインジェクションして使う必要があります。
それぞれの違いは

SimpleBuriProcessor
権限を管理しないタイプ

StandardBuriProcessor
権限を管理するタイプ。S2AnA等の連携まで可能なタイプ

BuriAutoSelectProcessor
パスによって上記を自動的に切り替えるタイプ

です
BaoはBuriAutoSelectProcessorの上に載せる形で作られています。

Processorは基本的な処理の呼びだしと最小限のデータの取得が可能です。

0.2.0との違いとしてフィルター系(いわゆる検索用)のメソッドが無くなりました。ぶり0.3.0以降では検索用のメソッドは独自にSQLを書いた方が効率的と判断したためです。
BuriPathDataとBuriPathDataUserという名前のViewをJoinすればSQLで特定の状態のデータを自由に検索できるようになります

4-4 ぶりでサポートするView

ぶりは状態の取得などをSQLで処理できるようにViewを提供しています。
ViewはBuriPathDataとBuriPathDataUserの二つ。

BuriPathData
Userを無関係に状態を取得する為のView
このViewは状態の管理上仮にUser情報があったとしても無視します

BuriPathDataUser
上記のViewにユーザの権限を追加したView
ユーザ情報の扱いについて
ユーザ情報はぶり内部のIDとParticipantProviderで取得できる値の二つを扱えます。
ぶり内部のIDを扱うのは意外と大変なのでParticipantProviderで取得できる値で処理することをお勧めします

手順的なヒントは
・ParticipantProviderのgetSingleUserを作ります
・RoleInfoを取得します
・BuriUserUtilのconvUserIDListFromRoleInfosでRoleInfoのListを渡すとIDの一覧が帰ってきます。
これをSQLでin句に渡すとOKです

4-5 AOP

ぶり2.3系からはS2AOP準拠のinterceptorなら何でもActivityとConditionに設定できるようになりました。
BuriExeProcess#addProcessAOP(traceInterceptor)
BuriExeProcess#addConditonAOP(traceInterceptor)
こんな感じ
これを使えばtraceInterceptorじゃなくてS2Javelinとかも設定できます。
実はS2Javelinでフローの流れが判るとすごく嬉しいなぁと思ったのでその為に新たに作った機能です(笑)
ちなみに表示は
パッケージ名.Activity名(userContext,path)
みたいな感じで表示されます。(2.3系を動かすと出るのでわかると思います)
パッケージ名.Activity名は両方ともIDが使われるので対策としてpathで日本語のパスが付いてます。

4-6 delayloader

ぶりにはContainerのH★O★Tデプロイ機能に似た機能としてdelayloaderを組み込み可能にしています。
この機能を有効にすると、一つのプロジェクトでたくさんのxpdlがある場合でもテスト中には必要最小限だけ読み込んだり、さらにTomcatの起動中にXPDLを修正すると自動的に再読込したりと言うことが出来ます。

これを有効にするにはburiSimple.diconとburiStandard.diconの遅延ロード用のコメント(一カ所だけです)を見つけてそのコメントを外してください。
これで自動的に遅延ロード＆自動再読込が有効になります。

この機能は多少オーバーヘッドが予想されるのでリリース時には再度コメントにしてリリースしてください。

この機能を有効にした場合、ぶりのいくつかのUnitTestが失敗しますがXPDLを先にコンパイルしないことで出た問題なので特に問題ありません。

